[
  {
    "objectID": "posts/Restaurant/Resaurant.html",
    "href": "posts/Restaurant/Resaurant.html",
    "title": "Restaurant Inspection",
    "section": "",
    "text": "Provide ggplot code to describe how the distribution of SCORE varies by GRADE and CRITICAL FLAG.\nUsing Boxplots, Histograms and Histograms with varying x- scale across facets.\nAnswer: Boxplots\n\nrestaurant &lt;- read.csv('https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv')\n\n\nlibrary(tidyverse)\nlibrary(skimr)\n\n\nggplot(restaurant) +\n  geom_boxplot(aes(x = SCORE, y = GRADE, fill = GRADE) ) +\n  facet_grid( CRITICAL.FLAG ~ . )\n\n\n\n\nAnswer: Histograms\n\nggplot(restaurant) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid(CRITICAL.FLAG ~ GRADE )\n\n\n\n\nAnswer: Histograms with varying x- scale across facets\n\nggplot(restaurant) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid(CRITICAL.FLAG ~ GRADE, scales = 'free_x' )"
  },
  {
    "objectID": "posts/Beer/beer-markets.html",
    "href": "posts/Beer/beer-markets.html",
    "title": "Beer Markets",
    "section": "",
    "text": "library(tidyverse)\nlibrary(skimr)\nbeer_mkts &lt;- read_csv('https://bcdanl.github.io/data/beer_markets.csv')\nrmarkdown::paged_table(beer_mkts)\n\n\n\n  \n\n\n\nQuestion 1. - For each household, calculate the number of beer transactions. - For each household, calculate the proportion of each beer brand choice.\n\nq2c &lt;- beer_mkts %&gt;% \n  count(hh, brand) %&gt;% \n  group_by(hh) %&gt;% \n  mutate(n_tot = sum(n)) %&gt;%  # n_tot : the number of beer transactions\n  arrange(hh, brand) %&gt;% \n  mutate( prop = n / n_tot ) # prop: the proportion of each beer brand choice\n\nq2c\n\n# A tibble: 13,202 √ó 5\n# Groups:   hh [10,408]\n        hh brand           n n_tot  prop\n     &lt;dbl&gt; &lt;chr&gt;       &lt;int&gt; &lt;int&gt; &lt;dbl&gt;\n 1 2000235 BUD LIGHT       1     1 1    \n 2 2000417 COORS LIGHT     8     8 1    \n 3 2000711 COORS LIGHT    13    13 1    \n 4 2000946 BUD LIGHT       1     2 0.5  \n 5 2000946 MILLER LITE     1     2 0.5  \n 6 2001521 BUD LIGHT       6    11 0.545\n 7 2001521 COORS LIGHT     3    11 0.273\n 8 2001521 MILLER LITE     2    11 0.182\n 9 2001531 BUSCH LIGHT     1     1 1    \n10 2001581 BUSCH LIGHT     5     5 1    \n# ‚Ñπ 13,192 more rows\n\n\nQuestion 2. - For households that purchased BUD LIGHT at least once, what fraction of households did purchase only BUD LIGHT? - For households that purchased BUSCH LIGHT at least once, what fraction of households did purchase only BUSCH LIGHT? - For households that purchased COORS LIGHT at least once, what fraction of households did purchase only COORS LIGHT? - For households that purchased MILLER LITE at least once, what fraction of households did purchase only MILLER LITE? - For households that purchased NATURAL LIGHT at least once, what fraction of households did purchase only NATURAL LIGHT? Which beer brand does have the largest proportion of such loyal consumers?\n\nq2b &lt;- beer_mkts %&gt;% \n  mutate(bud = ifelse(brand==\"BUD LIGHT\", 1, 0), # 1 if brand==\"BUD LIGHT\"; 0 otherwise\n         busch = ifelse(brand==\"BUSCH LIGHT\", 1, 0),\n         coors = ifelse(brand==\"COORS LIGHT\", 1, 0),\n         miller = ifelse(brand==\"MILLER LITE\", 1, 0),\n         natural = ifelse(brand==\"NATURAL LIGHT\", 1, 0),\n         .after = hh) %&gt;% \n  select(hh:natural) %&gt;%  # select the variables we need\n  group_by(hh) %&gt;% \n  summarise(n_transactions = n(), # number of beer transactions for each hh\n            n_bud = sum(bud), # number of BUD LIGHT transactions for each hh\n            n_busch = sum(busch), \n            n_coors = sum(coors), \n            n_miller = sum(miller), \n            n_natural = sum(natural) \n  ) %&gt;% \n  summarise(loyal_bud = sum(n_transactions == n_bud) / sum(n_bud &gt; 0), \n              # sum(n_transactions == n_bud) : the number of households that purchased BUD LIGHT only\n              # sum(n_bud &gt; 0) : the number of households that purchased BUD LIGHT at least once.\n            loyal_busch = sum(n_transactions == n_busch) / sum(n_busch &gt; 0),\n            loyal_coors = sum(n_transactions == n_coors) / sum(n_coors &gt; 0),\n            loyal_miller = sum(n_transactions == n_miller) / sum(n_miller &gt; 0),\n            loyal_natural = sum(n_transactions == n_natural) / sum(n_natural &gt; 0)\n  )\n\nq2b\n\n# A tibble: 1 √ó 5\n  loyal_bud loyal_busch loyal_coors loyal_miller loyal_natural\n      &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;\n1     0.660       0.473       0.639        0.631         0.510"
  },
  {
    "objectID": "posts/Spotify/Spotify.html",
    "href": "posts/Spotify/Spotify.html",
    "title": "Spotify",
    "section": "",
    "text": "Provide both (1) ggplot codes and (2) a couple of sentences to describe the relationship between pos and the ten most popular artists.\n\nlibrary(tidyverse)\nlibrary(skimr)\n\nspotify_all &lt;- read.csv('https://bcdanl.github.io/data/spotify_all.csv')\n\nQ1c &lt;- spotify_all %&gt;% \n  group_by(artist_name) %&gt;% \n  mutate(n_popular_artist = n()) %&gt;% \n  ungroup() %&gt;% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %&gt;% \n  filter( artist_ranking &lt;= 10) \n  \n# boxplot\nggplot(Q1c,\n       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    color = 'red'\n  )\n\n\n\n\n\n# histogram\nggplot(Q1c) +\n  geom_histogram(aes(x = pos), binwidth = 1) + \n  facet_grid(fct_reorder(artist_name, artist_ranking) ~ .  , switch = \"y\") +\n  theme(strip.text.y.left = element_text(angle = 0))"
  },
  {
    "objectID": "posts/welcome/Welcome.html",
    "href": "posts/welcome/Welcome.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is my very first post in a Quarto blog. Welcome!\n\nMy name is Jack Helrigel I am a Sophmore at SUNY Geneseo with a major in Finance. I grew in a small beach town on the north Shore of Long Island called Northport. I enjoy spending my free time with freinds and family.\n\nI am on the Mens lacrosse team at Suny Geneseo. Being actvie and healthy is a huge part of my life and playing lacrosse with people i have met here allows me to do that. The connections and relationships that being on the team has brought me will last a lifetime.\n\nGrowing up i have been an avid New York Rangers Hockey fan. My two olders brother and my dad have instilled this following from when i was a young kid. This is my favirite professional sports team to watch and i will have a passionate support for this team for my whole life."
  },
  {
    "objectID": "posts/NFL/danl200-hw5-HELRIGEL_JACK.html",
    "href": "posts/NFL/danl200-hw5-HELRIGEL_JACK.html",
    "title": "NFL in 2022",
    "section": "",
    "text": "Question 2. NFL in 2022\n\nAdd a blog post with your answers for Question 2 to your website (https://jackhelrigel.github.io/).\n\nMake sure that your blog post for Question 2 includes all the questionnaires and your answers to them.\nMake sure that your blog post for Question 2 has a section for each sub-question (e.g., Q2a, Q2b) in Question 2, so that the Table of Contents display the section for each questionnaire.\n\nThe following is the data.frame for Question 2.\n\n\nNFL2022_stuffs &lt;- read.csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n\n\nNFL2022_stuffs is the data.frame that contains information about NFL games in year 2022, in which the unit of observation is a single play for each drive in a NFL game.\n\n\n\nVariable Description üèà\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game.\ndrive: Numeric drive number in the game.\nweek: Season week.\nposteam: String abbreviation for the team with possession.\nqtr: Quarter of the game (5 is overtime).\nhalf_seconds_remaining: Numeric seconds remaining in the half.\ndown: The down for the given play.\n\nBasically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it).\nIf you make 10 yards then you get another set of four downs.\n\npass: Binary indicator if the play was a pass play.\nwp: Estimated winning probability for the posteam given the current situation at the start of the given play.\n\n\n\nQ2A\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\nlibrary(tidyverse)\nlibrary(skimr)\n\n\nq2a &lt;- NFL2022_stuffs %&gt;% \n  filter(!is.na(posteam))\n\n\n\nQ2B\nSummarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\nq2b &lt;- NFL2022_stuffs %&gt;% \n  filter(between(wp, 0.2, 0.75),\n         down &lt;= 2,\n         half_seconds_remaining &gt; 120)\n\nmeanvalq2b &lt;- q2b %&gt;% \n  group_by(posteam) %&gt;% \n  summarise(mean_pass = mean(pass, na.rm = TRUE))\n\nmeanvalq2b\n\n# A tibble: 32 √ó 2\n   posteam mean_pass\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ‚Ñπ 22 more rows\n\n\n\n\nQ2C\n\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n‚âà\n\n\nmeanvaldesc &lt;- meanvalq2b %&gt;% \n  arrange(desc(mean_pass))\n\nggplot(meanvaldesc, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point()+\n  labs(x= \"Percentage of Pass Plays\",\n       y= \"Team with possesion\")\n\n\n\n\nComments: - Cincinnati, Kansas City, Los Angeles Chargers, Buffalo Bills, and Philadelphia eagles had the top 5 highest average percentage of pass plays during the 2022 season. - Atlanta, Washington, Chicago, New Orleans, and Tennessee had the top 5 lowest average percentage of pass plays during the 2022 season.\n\n\nQ2D\n\nConsider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa &lt;- read.csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game.\ndrive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\nAnswer:\n\nNFL2022_stuffs_EPA &lt;- left_join(NFL2022_stuffs, NFL2022_epa, by = c(\"play_id\", \"game_id\", \"drive\", \"posteam\"))\n\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(!is.na(passer))\n\n\n\nQ2E\n\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\n‚ÄúJ.Allen‚Äù\n‚ÄúP.Mahomes‚Äù\n\n\n\ntwo_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\n\nfiltered_twopassers &lt;- NFL2022_stuffs_EPA %&gt;% \n  filter(passer %in% two_passers)\n\nmean_epa_data &lt;- filtered_twopassers %&gt;% group_by(week, passer) %&gt;% \n  summarise(mean_epa = mean(epa, na.rm = TRUE))\n\nggplot(mean_epa_data, aes(x= week, y= mean_epa, color = passer))+\n  geom_line()+\n  scale_color_manual(values =c(\"J.Allen\" =\"blue\", \"P.Mahomes\"=\"red\"))+\n  labs(x= \"Week\",\n       y= \"Mean value of expected points added (EPA)\")\n\n\n\n\nComment: Patrick Mahomes generally had a higher mean value of epa. However, there were a few weeks that Josh Allen had a higher mean value of epa.\n\n\nQ2F\nCalculate the difference between the mean value of epa for ‚ÄúJ.Allen‚Äù the mean value of epa for ‚ÄúP.Mahomes‚Äù for each value of week.\n\ndifference_epa &lt;- mean_epa_data %&gt;% \n  pivot_wider(names_from = passer, values_from = mean_epa)\n\ndifference_epa$epa_differnce &lt;- difference_epa$'J.Allen' - difference_epa$'P.Mahomes'\n\nprint(difference_epa)\n\n# A tibble: 22 √ó 4\n# Groups:   week [22]\n    week J.Allen P.Mahomes epa_differnce\n   &lt;int&gt;   &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1     1   0.530    0.698        -0.169 \n 2     2   0.487    0.148         0.339 \n 3     3   0.169    0.246        -0.0763\n 4     4   0.191    0.271        -0.0803\n 5     5   0.627    0.302         0.325 \n 6     6   0.307    0.133         0.173 \n 7     7  NA        0.701        NA     \n 8     8   0.224   NA            NA     \n 9     9  -0.208    0.0965       -0.304 \n10    10   0.161    0.589        -0.429 \n# ‚Ñπ 12 more rows\n\n\n\n\nQ2G\n\nSummarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\nsummary_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarise(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n()\n  )\n\nquantile_threshold_passer &lt;- quantile(summary_data$n_pass, 0.75)\nfiltered_summary_data &lt;- summary_data %&gt;%\n  filter(n_pass &gt;= quantile_threshold_passer)\n\ntop_10_passers &lt;- filtered_summary_data %&gt;%\n  arrange(desc(mean_epa)) %&gt;% \n  head(n=10)\n  \ntop_10_passers\n\n# A tibble: 10 √ó 4\n# Groups:   posteam [10]\n   posteam passer       mean_epa n_pass\n   &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;  &lt;int&gt;\n 1 KC      P.Mahomes      0.286     880\n 2 MIA     T.Tagovailoa   0.234     453\n 3 SF      J.Garoppolo    0.200     348\n 4 BUF     J.Allen        0.172     785\n 5 DET     J.Goff         0.171     661\n 6 CIN     J.Burrow       0.153     854\n 7 DAL     D.Prescott     0.147     529\n 8 PHI     J.Hurts        0.138     672\n 9 JAX     T.Lawrence     0.128     764\n10 CLE     J.Brissett     0.0912    445"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jack Helrigel",
    "section": "",
    "text": "Jack Helrigel majors in Finance at SUNY Geneseo. When not working on Finance, Jack enjoys spending time with freinds aswell as playing golf and working out."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jack Helrigel",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. in Finance | Aug 2022 - May 2026"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Jack Helrigel",
    "section": "Experience",
    "text": "Experience\nPrivate Contracting | Golds Gym Employee |"
  },
  {
    "objectID": "danl200-hw5-HELRIGEL_JACK.html",
    "href": "danl200-hw5-HELRIGEL_JACK.html",
    "title": "NFL in 2022",
    "section": "",
    "text": "Question 2. NFL in 2022\n\nAdd a blog post with your answers for Question 2 to your website (https://YOUR_GITHUB_USERNAME.github.io/).\n\nMake sure that your blog post for Question 2 includes all the questionnaires and your answers to them.\nMake sure that your blog post for Question 2 has a section for each sub-question (e.g., Q2a, Q2b) in Question 2, so that the Table of Contents display the section for each questionnaire.\n\nThe following is the data.frame for Question 2.\n\n\nNFL2022_stuffs &lt;- read.csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n\n\nNFL2022_stuffs is the data.frame that contains information about NFL games in year 2022, in which the unit of observation is a single play for each drive in a NFL game.\n\n\n\nVariable Description üèà\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game.\ndrive: Numeric drive number in the game.\nweek: Season week.\nposteam: String abbreviation for the team with possession.\nqtr: Quarter of the game (5 is overtime).\nhalf_seconds_remaining: Numeric seconds remaining in the half.\ndown: The down for the given play.\n\nBasically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it).\nIf you make 10 yards then you get another set of four downs.\n\npass: Binary indicator if the play was a pass play.\nwp: Estimated winning probability for the posteam given the current situation at the start of the given play.\n\n\n\nQ2A\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\nlibrary(tidyverse)\nlibrary(skimr)\n\n\nq2a &lt;- NFL2022_stuffs %&gt;% \n  filter(!is.na(posteam))\n\n\n\nQ2B\nSummarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\nq2b &lt;- NFL2022_stuffs %&gt;% \n  filter(between(wp, 0.2, 0.75),\n         down &lt;= 2,\n         half_seconds_remaining &gt; 120)\n\nmeanvalq2b &lt;- q2b %&gt;% \n  group_by(posteam) %&gt;% \n  summarise(mean_pass = mean(pass, na.rm = TRUE))\n\nmeanvalq2b\n\n# A tibble: 32 √ó 2\n   posteam mean_pass\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ‚Ñπ 22 more rows\n\n\n\n\nQ2C\n\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n‚âà\n\n\nmeanvaldesc &lt;- meanvalq2b %&gt;% \n  arrange(desc(mean_pass))\n\nggplot(meanvaldesc, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point()+\n  labs(x= \"Percentage of Pass Plays\",\n       y= \"Team with possesion\")\n\n\n\n\nComments: - Cincinnati, Kansas City, Los Angeles Chargers, Buffalo Bills, and Philadelphia eagles had the top 5 highest average percentage of pass plays during the 2022 season. - Atlanta, Washington, Chicago, New Orleans, and Tennessee had the top 5 lowest average percentage of pass plays during the 2022 season.\n\n\nQ2D\n\nConsider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa &lt;- read.csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game.\ndrive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\nAnswer:\n\nNFL2022_stuffs_EPA &lt;- left_join(NFL2022_stuffs, NFL2022_epa, by = c(\"play_id\", \"game_id\", \"drive\", \"posteam\"))\n\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(!is.na(passer))\n\n\n\nQ2E\n\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\n‚ÄúJ.Allen‚Äù\n‚ÄúP.Mahomes‚Äù\n\n\n\ntwo_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\n\nfiltered_twopassers &lt;- NFL2022_stuffs_EPA %&gt;% \n  filter(passer %in% two_passers)\n\nmean_epa_data &lt;- filtered_twopassers %&gt;% group_by(week, passer) %&gt;% \n  summarise(mean_epa = mean(epa, na.rm = TRUE))\n\nggplot(mean_epa_data, aes(x= week, y= mean_epa, color = passer))+\n  geom_line()+\n  scale_color_manual(values =c(\"J.Allen\" =\"blue\", \"P.Mahomes\"=\"red\"))+\n  labs(x= \"Week\",\n       y= \"Mean value of expected points added (EPA)\")\n\n\n\n\nComment: Patrick Mahomes generally had a higher mean value of epa. However, there were a few weeks that Josh Allen had a higher mean value of epa.\n\n\nQ2F\nCalculate the difference between the mean value of epa for ‚ÄúJ.Allen‚Äù the mean value of epa for ‚ÄúP.Mahomes‚Äù for each value of week.\n\ndifference_epa &lt;- mean_epa_data %&gt;% \n  pivot_wider(names_from = passer, values_from = mean_epa)\n\ndifference_epa$epa_differnce &lt;- difference_epa$'J.Allen' - difference_epa$'P.Mahomes'\n\nprint(difference_epa)\n\n# A tibble: 22 √ó 4\n# Groups:   week [22]\n    week J.Allen P.Mahomes epa_differnce\n   &lt;int&gt;   &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n 1     1   0.530    0.698        -0.169 \n 2     2   0.487    0.148         0.339 \n 3     3   0.169    0.246        -0.0763\n 4     4   0.191    0.271        -0.0803\n 5     5   0.627    0.302         0.325 \n 6     6   0.307    0.133         0.173 \n 7     7  NA        0.701        NA     \n 8     8   0.224   NA            NA     \n 9     9  -0.208    0.0965       -0.304 \n10    10   0.161    0.589        -0.429 \n# ‚Ñπ 12 more rows\n\n\n\n\nQ2G\n\nSummarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\nsummary_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarise(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n()\n  )\n\nquantile_threshold_passer &lt;- quantile(summary_data$n_pass, 0.75)\nfiltered_summary_data &lt;- summary_data %&gt;%\n  filter(n_pass &gt;= quantile_threshold_passer)\n\ntop_10_passers &lt;- filtered_summary_data %&gt;%\n  arrange(desc(mean_epa)) %&gt;% \n  head(n=10)\n  \ntop_10_passers\n\n# A tibble: 10 √ó 4\n# Groups:   posteam [10]\n   posteam passer       mean_epa n_pass\n   &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;  &lt;int&gt;\n 1 KC      P.Mahomes      0.286     880\n 2 MIA     T.Tagovailoa   0.234     453\n 3 SF      J.Garoppolo    0.200     348\n 4 BUF     J.Allen        0.172     785\n 5 DET     J.Goff         0.171     661\n 6 CIN     J.Burrow       0.153     854\n 7 DAL     D.Prescott     0.147     529\n 8 PHI     J.Hurts        0.138     672\n 9 JAX     T.Lawrence     0.128     764\n10 CLE     J.Brissett     0.0912    445"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Jack Helrigel‚Äôs Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nJack Helrigel\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nSpotify\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nJack Helrigel\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nRestaurant Inspection\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nJack Helrigel\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nNFL in 2022\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nJack Helrigel\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\nBeer Markets\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nJack Helrigel\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project üëè Welcome to our Project, where we dive into the dynamic world of professional basketball through the lens of players salaries and performance statistics. We will analyzing a dataset with NBA Players Salaries and statistics from the 2022-2023 NBA season.\n\nlibrary(tidyverse)\nlibrary(skimr)"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nNBAsal &lt;-read_csv(\"nba_salaries.csv\")\n\n\n\n\n  \n\n\n\nskim(NBAsal) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nNBAsal\n\n\nNumber of rows\n467\n\n\nNumber of columns\n32\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n28\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nPlayer Name\n1\n7\n24\n0\n467\n0\n\n\nPosition\n1\n1\n5\n0\n9\n0\n\n\nTeam\n1\n3\n7\n0\n75\n0\n\n\nPlayer-additional\n1\n7\n9\n0\n467\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\n‚Ä¶1\n1.00\n233.00\n134.96\n0.0\n116.50\n233.00\n349.50\n466.0\n‚ñá‚ñá‚ñá‚ñá‚ñá\n\n\nSalary\n1.00\n8416598.75\n10708118.05\n5849.0\n1782621.00\n3722040.00\n10633543.50\n48070014.0\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nAge\n1.00\n25.82\n4.28\n19.0\n23.00\n25.00\n29.00\n42.0\n‚ñá‚ñá‚ñÉ‚ñÇ‚ñÅ\n\n\nGP\n1.00\n48.23\n24.81\n1.0\n31.00\n55.00\n68.50\n83.0\n‚ñÖ‚ñÇ‚ñÖ‚ñÜ‚ñá\n\n\nGS\n1.00\n22.65\n27.09\n0.0\n1.00\n8.00\n45.50\n83.0\n‚ñá‚ñÇ‚ñÅ‚ñÇ‚ñÇ\n\n\nMP\n1.00\n19.87\n9.55\n1.8\n12.50\n19.20\n28.30\n41.0\n‚ñÖ‚ñá‚ñá‚ñÜ‚ñÉ\n\n\nFG\n1.00\n3.35\n2.46\n0.0\n1.60\n2.70\n4.30\n11.2\n‚ñá‚ñá‚ñÇ‚ñÇ‚ñÅ\n\n\nFGA\n1.00\n7.12\n5.02\n0.0\n3.30\n5.80\n9.40\n22.2\n‚ñá‚ñá‚ñÉ‚ñÇ‚ñÇ\n\n\nFG%\n1.00\n0.47\n0.11\n0.0\n0.42\n0.46\n0.51\n1.0\n‚ñÅ‚ñÇ‚ñá‚ñÅ‚ñÅ\n\n\n3P\n1.00\n1.00\n0.88\n0.0\n0.30\n0.80\n1.50\n4.9\n‚ñá‚ñÉ‚ñÇ‚ñÅ‚ñÅ\n\n\n3PA\n1.00\n2.79\n2.26\n0.0\n1.00\n2.40\n4.15\n11.4\n‚ñá‚ñÜ‚ñÇ‚ñÅ‚ñÅ\n\n\n3P%\n0.97\n0.33\n0.13\n0.0\n0.29\n0.34\n0.39\n1.0\n‚ñÇ‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\n2P\n1.00\n2.36\n1.99\n0.0\n0.90\n1.70\n3.30\n10.5\n‚ñá‚ñÉ‚ñÅ‚ñÅ‚ñÅ\n\n\n2PA\n1.00\n4.33\n3.57\n0.0\n1.80\n3.20\n5.85\n17.8\n‚ñá‚ñÉ‚ñÇ‚ñÅ‚ñÅ\n\n\n2P%\n0.99\n0.53\n0.14\n0.0\n0.49\n0.54\n0.59\n1.0\n‚ñÅ‚ñÅ‚ñá‚ñÇ‚ñÅ\n\n\neFG%\n1.00\n0.53\n0.10\n0.0\n0.49\n0.54\n0.58\n1.0\n‚ñÅ‚ñÅ‚ñá‚ñÇ‚ñÅ\n\n\nFT\n1.00\n1.44\n1.57\n0.0\n0.50\n0.90\n1.85\n10.0\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nFTA\n1.00\n1.85\n1.90\n0.0\n0.60\n1.20\n2.35\n12.3\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nFT%\n0.95\n0.75\n0.15\n0.0\n0.69\n0.77\n0.84\n1.0\n‚ñÅ‚ñÅ‚ñÇ‚ñá‚ñÜ\n\n\nORB\n1.00\n0.87\n0.75\n0.0\n0.40\n0.70\n1.10\n5.1\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nDRB\n1.00\n2.66\n1.71\n0.0\n1.40\n2.30\n3.50\n9.6\n‚ñá‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nTRB\n1.00\n3.53\n2.28\n0.0\n1.90\n3.00\n4.50\n12.5\n‚ñá‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nAST\n1.00\n2.11\n1.96\n0.0\n0.80\n1.40\n2.90\n10.7\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nSTL\n1.00\n0.61\n0.40\n0.0\n0.30\n0.60\n0.80\n3.0\n‚ñá‚ñÖ‚ñÅ‚ñÅ‚ñÅ\n\n\nBLK\n1.00\n0.38\n0.36\n0.0\n0.10\n0.30\n0.50\n2.5\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nTOV\n1.00\n1.11\n0.83\n0.0\n0.50\n0.90\n1.50\n4.1\n‚ñá‚ñÜ‚ñÇ‚ñÅ‚ñÅ\n\n\nPF\n1.00\n1.70\n0.78\n0.0\n1.20\n1.70\n2.20\n5.0\n‚ñÉ‚ñá‚ñÖ‚ñÅ‚ñÅ\n\n\nPTS\n1.00\n9.13\n6.91\n0.0\n4.10\n7.10\n11.70\n33.1\n‚ñá‚ñÜ‚ñÇ‚ñÇ‚ñÅ"
  },
  {
    "objectID": "project.html#top-players-and-points-per-game",
    "href": "project.html#top-players-and-points-per-game",
    "title": "DANL Project",
    "section": "2.2 Top Players and Points Per Game",
    "text": "2.2 Top Players and Points Per Game\nThe following shows the top 10 players during the NBA 2022-2023 season based on the number of points per game.\n\ntop_10_players &lt;- NBAsal %&gt;% \n  group_by(PTS) %&gt;% \n  arrange(desc(PTS)) %&gt;% \n  head(10) %&gt;% \n  relocate(PTS,.before = Position)\n  \ntop_10_players\n\n# A tibble: 10 √ó 32\n# Groups:   PTS [10]\n    ...1 `Player Name` Salary   PTS Position   Age Team     GP    GS    MP    FG\n   &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1    27 Joel Embiid   3.36e7  33.1 C           28 PHI      66    66  34.6  11  \n 2     9 Damian Lilla‚Ä¶ 4.25e7  32.2 PG          32 POR      58    58  36.3   9.6\n 3    34 Shai Gilgeou‚Ä¶ 3.09e7  31.4 PG          24 OKC      68    68  35.5  10.4\n 4     8 Giannis Ante‚Ä¶ 4.25e7  31.1 PF          28 MIL      63    63  32.1  11.2\n 5    37 Jayson Tatum  3.04e7  30.1 SF          24 BOS      74    74  36.9   9.8\n 6     0 Stephen Curry 4.81e7  29.4 PG          34 GSW      56    56  34.7  10  \n 7     4 Kevin Durant  4.41e7  29.1 PF          34 BRK/‚Ä¶    47    47  35.6  10.3\n 8     3 LeBron James  4.45e7  28.9 PF          38 LAL      55    54  35.5  11.1\n 9    33 Donovan Mitc‚Ä¶ 3.09e7  28.3 SG          26 CLE      68    68  35.8  10  \n10    25 Devin Booker  3.38e7  27.8 SG          26 PHO      53    53  34.6   9.9\n# ‚Ñπ 21 more variables: FGA &lt;dbl&gt;, `FG%` &lt;dbl&gt;, `3P` &lt;dbl&gt;, `3PA` &lt;dbl&gt;,\n#   `3P%` &lt;dbl&gt;, `2P` &lt;dbl&gt;, `2PA` &lt;dbl&gt;, `2P%` &lt;dbl&gt;, `eFG%` &lt;dbl&gt;, FT &lt;dbl&gt;,\n#   FTA &lt;dbl&gt;, `FT%` &lt;dbl&gt;, ORB &lt;dbl&gt;, DRB &lt;dbl&gt;, TRB &lt;dbl&gt;, AST &lt;dbl&gt;,\n#   STL &lt;dbl&gt;, BLK &lt;dbl&gt;, TOV &lt;dbl&gt;, PF &lt;dbl&gt;, `Player-additional` &lt;chr&gt;\n\n\nComments:\n\nJoel Embiid, Damian Lillard, Shai Gilgeous-Alexander, Giannis Antetokounmpo, Jayson Tatum, Stephen Curry, Kevin Durant, Lebron James, Donovan Mitchell, and Devin Booker are the top 10 players based on points per game for the 2022-2023 NBA season"
  },
  {
    "objectID": "project.html#points-per-game-and-salary",
    "href": "project.html#points-per-game-and-salary",
    "title": "DANL Project",
    "section": "2.3 Points Per Game and Salary",
    "text": "2.3 Points Per Game and Salary\nProvide both ggplot codes and a couple of sentences to describe the relationship between salary and points per game.\n\nggplot(NBAsal, aes(x= PTS, y= Salary))+\n  geom_point()+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"blue\")\n\n\n\n\nComments:\n\nThe plot above shows us that during 2022-2023 season players that had a higher average points per game generally had a higher salary than players that had a lower average points per game.\nThis implies that players that score more points per game are generally considered more valuable to a franchise which is why they are paid more."
  }
]