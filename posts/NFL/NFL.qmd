---
title: "NFL in 2022"
author: "Jack Helrigel"
date: "2023-12-11"
categories: [Data Analysis]
image: "NFL.jpeg"

execute: 
  warning: false
  message: false
  
toc: true
---

![](NFL.jpeg)

# Question 2. NFL in 2022

- Add a blog post with your answers for Question 2 to your website (https://YOUR_GITHUB_USERNAME.github.io/).
  - Make sure that your blog post for Question 2 includes all the questionnaires and your answers to them.
  - Make sure that your blog post for Question 2 has a section for each sub-question (e.g., Q2a, Q2b) in Question 2, so that the Table of Contents display the section for each questionnaire.
- The following is the data.frame for Question 2.

```{r}
NFL2022_stuffs <- read.csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')
```

- NFL2022_stuffs is the data.frame that contains information about NFL games in year 2022, in which the unit of observation is a single play for each drive in a NFL game.


# Variable Description 🏈

- play_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play
- game_id: Ten digit identifier for NFL game.
- drive: Numeric drive number in the game.
- week: Season week.
- posteam: String abbreviation for the team with possession.
- qtr: Quarter of the game (5 is overtime).
- half_seconds_remaining: Numeric seconds remaining in the half.
- down: The down for the given play.
  - Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it).
  - If you make 10 yards then you get another set of four downs.
- pass: Binary indicator if the play was a pass play.
- wp: Estimated winning probability for the posteam given the current situation at the start of the given play.

# Q2A

In data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.

```{r}
library(tidyverse)
library(skimr)
```

```{r}
q2a <- NFL2022_stuffs %>% 
  filter(!is.na(posteam))
```

# Q2B 

Summarize the mean value of pass for each posteam when all the following conditions hold:

1. wp is greater than 20% and less than 75%;
2. down is less than or equal to 2; and
3. half_seconds_remaining is greater than 120.


```{r}
q2b <- NFL2022_stuffs %>% 
  filter(between(wp, 0.2, 0.75),
         down <= 2,
         half_seconds_remaining > 120)

meanvalq2b <- q2b %>% 
  group_by(posteam) %>% 
  summarise(mean_pass = mean(pass, na.rm = TRUE))

meanvalq2b
```

# Q2C 

- Provide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.
  - In the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.
  
  ≈
```{r}
meanvaldesc <- meanvalq2b %>% 
  arrange(desc(mean_pass))

ggplot(meanvaldesc, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +
  geom_point()+
  labs(x= "Percentage of Pass Plays",
       y= "Team with possesion")
```
Comments:
  - Cincinnati, Kansas City, Los Angeles Chargers, Buffalo Bills, and Philadelphia eagles had the top 5 highest average percentage of pass plays during the 2022 season.
  - Atlanta, Washington, Chicago, New Orleans, and Tennessee had the top 5 lowest average percentage of pass plays during the 2022 season.
  

# Q2D

- Consider the following data.frame, NFL2022_epa:

```{r}
NFL2022_epa <- read.csv('https://bcdanl.github.io/data/NFL2022_epa.csv')
```

- Variable description for NFL2022_epa
  - play_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play
  - game_id: Ten digit identifier for NFL game.
  - drive: Numeric drive number in the game.
  - posteam: String abbreviation for the team with possession.
  - passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)
  - receiver: Name of the receiver.
  - epa: Expected points added (EPA) by the posteam for the given play.
- Create the data.frame, NFL2022_stuffs_EPA, that includes
  1. All the variables in the data.frame, NFL2022_stuffs;
  2. The variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.
- In the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.

Answer: 
```{r}
NFL2022_stuffs_EPA <- left_join(NFL2022_stuffs, NFL2022_epa, by = c("play_id", "game_id", "drive", "posteam"))

NFL2022_stuffs_EPA <- NFL2022_stuffs_EPA %>%
  filter(!is.na(passer))
```

